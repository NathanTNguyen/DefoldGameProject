function init(self)
	msg.post(".", "acquire_input_focus")
	self.vel = vmath.vector3()
	self.slimeHealth = 100
	local scale = vmath.vector3(2.5,2.5,1)
	go.set_scale(scale)
	slimeBossCount = slimeBossCount + 1
end

function final(self)
	score = score + math.random(200,500)
	msg.post("/interface#gui", "update_score")
	msg.post("/hero", "slimeBossDeath")
	slimeBossCount = slimeBossCount - 1
end

function update(self, dt)
	if go.get("/hero#character", "is_alive") == false then
		go.delete()
	end
	--removes object when health is equal or less than 0
	if self.slimeHealth > 0 then
		self.deathTimestamp = socket.gettime()
	else
		self.deathTimestamp = self.deathTimestamp
	end
	if socket.gettime() - self.deathTimestamp > 0.5 then
		msg.post("/hero#slimeDeath", "play_sound")
		msg.post("/hero#character", "speed")
		factory.create("/hero#coinFactory", self.q)
		go.delete()
	end
	q = go.get_position()
	q = q + self.vel * dt
	go.set_position(q)
	local movement = math.random(1,600)
	if movement == 1 then
		self.vel.y = 5
	elseif movement == 2 then
		self.vel.y = -5
	elseif movement == 3 then
		self.vel.x = 5
	elseif movement == 4 then
		self.vel.x = -5
	elseif movement == 20 then
		msg.post(".", "play_animation", {id =hash("rightAttack")} )
		factory.create("/hero#laserHerofactory", q + vmath.vector3(35,0,0))
	elseif movement == 40 then
		msg.post(".", "play_animation", {id =hash("leftAttack")} )
		factory.create("/hero#laserHerofactory", q + vmath.vector3(-35,0,0))
	elseif movement == 60 then
		msg.post(".", "play_animation", {id =hash("upAttack")} )
		factory.create("/hero#laserHerofactory", q + vmath.vector3(0,35,0))
	elseif movement == 80 then
		msg.post(".", "play_animation", {id =hash("downAttack")} )
		factory.create("/hero#laserHerofactory", q + vmath.vector3(0,-35,0))
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		--Detects collision with objects, prevents sprite from passing through
		go.set_position(go.get_position() + message.normal * message.distance)
	end
	--when "damage" message is received, plays damage animation and reduces health
	if message_id == hash("damage") then
		local randSpawn = math.random(1,2)
		if randSpawn == 1 then
			msg.post("/hero", "spawnSlime")
		end
		msg.post("/hero#slimeHit", "play_sound")
		factory.create("/hero#loseEnemyHealth", vmath.vector3(q))
		msg.post(".", "play_animation", {id =hash("upDamage")} )
		self.slimeHealth = self.slimeHealth - 10
	elseif message_id == hash("animation_done") then
		msg.post(".", "play_animation", {id = hash("idle")})
	end
end

function on_input(self, action_id, action)

end

function on_reload(self)

end
