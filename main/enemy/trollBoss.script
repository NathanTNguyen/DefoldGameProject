function init(self)
	msg.post(".", "acquire_input_focus")
	local scale = vmath.vector3(1.8,1.8,1)
	go.set_scale(scale)
	self.vel = vmath.vector3()
	self.trollHealth = 200
	trollDmgAmount = 10
	trollBossCount = trollBossCount + 1 
	self.deathTimestamp = 0
	trollBossDirection = "down"
end

function final(self)
	msg.post("/interface#gui", "gameFinal")
	score = score + math.random(200,500)
	msg.post("/interface#gui", "update_score")
	trollBossCount = trollBossCount - 1
	health = 0
end

function update(self, dt)	
	if go.get("/hero#character", "is_alive") == false then
		go.delete()
	end
	--removes object when health is equal or less than 0
	if self.trollHealth > 0 then
		self.deathTimestamp = socket.gettime()
	else
		self.deathTimestamp = self.deathTimestamp
	end
	if socket.gettime() - self.deathTimestamp > 0.5 then
		--msg.post("/hero#slimeDeath", "play_sound")
		msg.post("/hero#character", "speed")
		factory.create("/hero#coinFactory", self.q)
		go.delete()
	end
	self.q = go.get_position()
	self.q = self.q + self.vel * dt
	go.set_position(self.q)
	local movement = math.random(1,400)
	if movement == 1 then
		self.vel.y = 10
	elseif movement == 2 then
		self.vel.y = -10
	elseif movement == 3 then
		self.vel.x = 10
	elseif movement == 4 then 
		self.vel.x = -10
	elseif movement == 20 then
		msg.post(".", "play_animation", {id =hash("rightAttack")} )
		trollBossDirection = "right"
		factory.create("/hero#bulletGoblin", self.q + vmath.vector3(40,0,0))
		factory.create("/hero#laserHerofactory", self.q + vmath.vector3(30,0,0))
	elseif movement == 40 then
		msg.post(".", "play_animation", {id =hash("leftAttack")} )
		trollBossDirection = "left"
		factory.create("/hero#bulletGoblin", self.q + vmath.vector3(-45,0,0))
		factory.create("/hero#laserHerofactory", self.q + vmath.vector3(-30,0,0))
	elseif movement == 60 then
		msg.post(".", "play_animation", {id =hash("upAttack")} )
		trollBossDirection = "up"
		factory.create("/hero#bulletGoblin", self.q + vmath.vector3(0,40,0))
		factory.create("/hero#laserHerofactory", self.q + vmath.vector3(0,30,0))
	elseif movement == 80 then
		msg.post(".", "play_animation", {id =hash("downAttack")} )
		trollBossDirection = "down"
		factory.create("/hero#bulletGoblin", self.q + vmath.vector3(0,-40,0))
		factory.create("/hero#laserHerofactory", self.q + vmath.vector3(0,-30,0))
	end
end

function on_message(self, message_id, message, sender)
	--Detects collision with objects, prevents sprite from passing through
	if message_id == hash("contact_point_response") then
		go.set_position(go.get_position() + message.normal * message.distance)
	end
	--when "damage" message is received, plays damage animation and reduces health
	if message_id == hash("damage") then
		factory.create("/hero#loseEnemyHealth", vmath.vector3(self.q))
		self.trollHealth = self.trollHealth - heroDmgAmount
		--msg.post("/hero#slimeHit", "play_sound")
	elseif message_id == hash("animation_done") then
		msg.post(".", "play_animation", {id = hash("idle")})
	end
end

function on_input(self, action_id, action)

end

function on_reload(self)

end
